plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

apply from: 'helper.gradle'

group 'network.fluff'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

File librariesRuntimeDirectory = new File("libraries_runtime")
File librariesShadeDirectory = new File("libraries_shade")
File targetJarDirectory = new File("target")

task setupFolders(type: DefaultTask) {
    doLast {
        librariesRuntimeDirectory.mkdirs()
        librariesShadeDirectory.mkdirs()
        targetJarDirectory.mkdirs()
    }
}

task updateSpigot(type: BuildLibraryTask) {
    targetDirectory = librariesRuntimeDirectory
    targetLibraryName = "spigot-1.15.2-1.jar"
    builderUrl = "https://papermc.io/api/v1/paper/1.15.2/65/download"
    buildCommand = "java -Dpaperclip.patchonly=true -jar {BUILDER}"
    builtLibraryName = ["cache", "patched_1.15.2.jar"]
}

task updateRuntimeLibraries(type: UpdateLibrariesTask) {
    directory = librariesRuntimeDirectory
    libraries = []
    manualLibraries = new HashSet<>(Arrays.asList(updateSpigot.targetLibraryName))
}

task updateShadeLibraries(type: UpdateLibrariesTask) {
    directory = librariesShadeDirectory
    libraries = [
            [name: 'raknetserver-30.jar', url: 'https://build.true-games.org/job/RakNetServer/30/artifact/target/RakNetServer.jar'],
    ]
}


repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        url 'https://papermc.io/repo/repository/maven-public/'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile fileTree(dir: librariesShadeDirectory, include: '*.jar')

    compileOnly group: 'com.destroystokyo.paper', name: 'paper-api', version: '1.15.1-R0.1-SNAPSHOT'
    compileOnly fileTree(dir: librariesRuntimeDirectory, include: '*.jar')
}

shadowJar {
    from 'LICENSE'

    exclude 'META-INF/**'

    minimize()
}

task copyFinalJarToTarget(type: DefaultTask) {doLast{
    java.nio.file.Files.copy(
            shadowJar.archivePath.getAbsoluteFile().toPath(),
            new File(targetJarDirectory, jar.baseName + '.jar').getAbsoluteFile().toPath(),
    java.nio.file.StandardCopyOption.REPLACE_EXISTING
    )
}}

compileJava.dependsOn(clean)
compileJava.dependsOn(setupFolders)
compileJava.dependsOn(updateSpigot)
compileJava.dependsOn(updateRuntimeLibraries)
compileJava.dependsOn(updateShadeLibraries)
compileJava.finalizedBy(test)
jar.enabled = false
jar.finalizedBy(shadowJar)
shadowJar.finalizedBy(copyFinalJarToTarget)